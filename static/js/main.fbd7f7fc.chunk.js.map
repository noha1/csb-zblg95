{"version":3,"sources":["components/counter.js","components/search.js","App.js","index.js"],"names":["Counter","useState","count","setCount","id","classname","onClick","prevCount","Search","text","cityList","filterList","setFilterList","type","onChange","event","target","value","console","log","res","filter","w","trim","toLowerCase","map","item","index","App","className","rootElement","document","getElementById","createRoot","render"],"mappings":"yLA4BeA,EA3BC,WACd,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,sBAAKC,GAAG,WAAR,UACE,8CAEE,+BAAOF,OAET,wBAAQG,UAAU,WAAWC,QAdf,WAChBH,GAAS,SAACI,GAAD,OAAeA,EAAY,MAaeH,GAAG,aAApD,sBAGA,wBAAQC,UAAU,WAAWC,QAbnB,WACZH,EAAS,IAYsCC,GAAG,aAAhD,uBCOSI,EA1BA,SAACC,GACd,IAAMC,EAAW,CAAC,SAAU,QAAS,QAAS,QAAS,SAAU,QACjE,EAAoCT,mBAASS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,gCACE,uBAAOC,KAAK,OAAOT,GAAG,cAAcU,SAblB,SAACC,GACrB,GAA2B,KAAvBA,EAAMC,OAAOC,MACfL,EAAcF,OACT,CACLQ,QAAQC,IAAIJ,EAAMC,OAAOC,OACzB,IAAIG,EAAMV,EAASW,QACjB,SAACC,GAAD,OAAOA,IAAMP,EAAMC,OAAOC,MAAMM,OAAOC,iBAEzCZ,EAAcQ,OAMbT,GACCA,EAAWc,KAAI,SAACC,EAAMC,GAAP,OACb,8BAAkBD,GAARC,UCnBL,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,OCHN,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACN,EAAD,S","file":"static/js/main.fbd7f7fc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount((prevCount) => prevCount + 1);\n  };\n\n  const reset = () => {\n    setCount(0);\n  };\n\n  return (\n    <div id=\"mainArea\">\n      <p>\n        Button Count:\n        <span>{count}</span>\n      </p>\n      <button classname=\"button-1\" onClick={increment} id=\"mainButton\">\n        Increase\n      </button>\n      <button classname=\"button-1\" onClick={reset} id=\"mainButton\">\n        reset\n      </button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React, { useState } from \"react\";\n\nconst Search = (text) => {\n  const cityList = [\"london\", \"milan\", \"paris\", \"cairo\", \"berlin\", \"Rome\"];\n  const [filterList, setFilterList] = useState(cityList);\n\n  const searchHandler = (event) => {\n    if (event.target.value === \"\") {\n      setFilterList(cityList);\n    } else {\n      console.log(event.target.value);\n      let res = cityList.filter(\n        (w) => w === event.target.value.trim().toLowerCase()\n      );\n      setFilterList(res);\n    }\n  };\n  return (\n    <div>\n      <input type=\"text\" id=\"searchInput\" onChange={searchHandler} />\n      {filterList &&\n        filterList.map((item, index) => (\n          <div key={index}>{item}</div> //Display each item\n        ))}\n    </div>\n  );\n};\n\nexport default Search;\n","import \"./styles.css\";\nimport Counter from \"./components/counter\";\nimport Search from \"./components/search\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <Search />\n      <Counter />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}